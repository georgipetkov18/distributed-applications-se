// <auto-generated />
using System;
using InvestmentManagerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestmentManagerApi.Data.Migrations
{
    [DbContext(typeof(InvestmentManagerDbContext))]
    [Migration("20240525104700_doNotSeedUser")]
    partial class doNotSeedUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ToEuroRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a7cc6fe-52bb-4bf6-aec6-6c739c9ae70f"),
                            Code = "EUR",
                            CreatedOn = new DateTime(2024, 5, 25, 10, 46, 59, 842, DateTimeKind.Utc).AddTicks(9412),
                            IsActivated = true,
                            Name = "Euro",
                            ToEuroRate = 1m,
                            UpdatedOn = new DateTime(2024, 5, 25, 10, 46, 59, 842, DateTimeKind.Utc).AddTicks(9414)
                        },
                        new
                        {
                            Id = new Guid("6390d8d3-3b72-4ef3-ab8d-505828763952"),
                            Code = "BGN",
                            CreatedOn = new DateTime(2024, 5, 25, 10, 46, 59, 842, DateTimeKind.Utc).AddTicks(9422),
                            IsActivated = true,
                            Name = "Lev",
                            ToEuroRate = 1.95m,
                            UpdatedOn = new DateTime(2024, 5, 25, 10, 46, 59, 842, DateTimeKind.Utc).AddTicks(9422)
                        },
                        new
                        {
                            Id = new Guid("1f711a38-3192-4095-8a76-a2e25681b3e5"),
                            Code = "USD",
                            CreatedOn = new DateTime(2024, 5, 25, 10, 46, 59, 842, DateTimeKind.Utc).AddTicks(9426),
                            IsActivated = true,
                            Name = "American Dollar",
                            ToEuroRate = 0.93m,
                            UpdatedOn = new DateTime(2024, 5, 25, 10, 46, 59, 842, DateTimeKind.Utc).AddTicks(9426)
                        });
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Etf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<decimal>("SingleValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Etfs");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EtfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EtfId");

                    b.HasIndex("WalletId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActivated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Investment", b =>
                {
                    b.HasOne("InvestmentManagerApi.Data.Entities.Etf", "Etf")
                        .WithMany("Investments")
                        .HasForeignKey("EtfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentManagerApi.Data.Entities.Wallet", "Wallet")
                        .WithMany("Investments")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etf");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Wallet", b =>
                {
                    b.HasOne("InvestmentManagerApi.Data.Entities.Currency", "Currency")
                        .WithMany("Wallets")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentManagerApi.Data.Entities.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Currency", b =>
                {
                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Etf", b =>
                {
                    b.Navigation("Investments");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.User", b =>
                {
                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("InvestmentManagerApi.Data.Entities.Wallet", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
